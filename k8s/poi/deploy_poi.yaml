apiVersion: apps/v1
kind: Deployment
metadata:
  name: poi
  labels:
    app: poi-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: poi
  template:
    metadata:
      labels:
        app: poi
    spec:
      containers:
        - name: poi
          image: 'registryqzm1711.azurecr.io/poi:latest'
          ports:
            - containerPort: 80
          env:
            - name: SQL_USER
              value: sqladminqZm1711
            - name: SQL_PASSWORD
              value: oH2ho8Ro3
            - name: SQL_SERVER
              value: sqlserverqzm1711.database.windows.net
            - name: SQL_DBNAME
              value: mydrivingDB
            - name: WEB_PORT
              value: '80'
            - name: WEB_SERVER_BASE_URI
              value: 'http://0.0.0.0'
            - name: ASPNETCORE_ENVIRONMENT
              value: Production
            - name: CONFIG_FILES_PATH
              value: /secrets
          #envFrom:
          #  - secretRef:
          #    name: {{name of your secret in kubernetes}}
          # not required, but recommended best practice
          livenessProbe:
            httpGet:
              path: '/api/poi/healthcheck' # hint: there is a healthcheck endpoint - read the README!
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: '/api/poi/healthcheck'
              port: 80
            initialDelaySeconds: 5
            periodSeconds: 5
          # resource limits are also best practice - I'll let you figure that out on your own
---
apiVersion: v1
kind: Service
metadata:
  name: poi
  # namespace: my-app
spec:
  type: ClusterIP #LoadBalancer
  selector:
    app: poi
  ports:
    - protocol: TCP
      name: poi-http
      port: 80 # port you hit
      targetPort: 80 # port inside
